!function(a){"use strict";function b(){this.models={},this.collections={},this.views={}}a.wp=a.wp||{},wp.api=wp.api||new b}(window),function(a,b){"use strict";function c(){var a=Date.parse,c=[1,4,5,6,7,10,11];this.parseISO8601=function(d){var e,f,g,h,i=0;if(f=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(d)){for(g=0;h=c[g];++g)f[h]=+f[h]||0;f[2]=(+f[2]||1)-1,f[3]=+f[3]||1,"Z"!==f[8]&&f[9]!==b&&(i=60*f[10]+f[11],"+"===f[9]&&(i=0-i)),e=Date.UTC(f[1],f[2],f[3],f[4],f[5]+i,f[6],f[7])}else e=a?a(d):0/0;return e}}if(!Date.prototype.toISOString){var d=function(a){var b=String(a);return 1===b.length&&(b="0"+b),b};Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+d(this.getUTCMonth()+1)+"-"+d(this.getUTCDate())+"T"+d(this.getUTCHours())+":"+d(this.getUTCMinutes())+":"+d(this.getUTCSeconds())+"."+String((this.getUTCMilliseconds()/1e3).toFixed(3)).slice(2,5)+"Z"}}a.wp=a.wp||{},wp.api=wp.api||{},wp.api.utils=wp.api.utils||new c}(window),function(a,b,c){"use strict";var d=["date","modified"];a.api.models.User=c.Model.extend({idAttribute:"ID",urlRoot:b.root+"/users",defaults:{ID:null,username:"",email:"",password:"",name:"",first_name:"",last_name:"",nickname:"",slug:"",URL:"",avatar:"",meta:{links:{}}},avatar:function(a){return this.get("avatar")+"&s="+a}}),a.api.models.Taxonomy=c.Model.extend({idAttribute:"name",defaults:{name:null,slug:"",labels:[],types:["post"],show_cloud:!1,hierarchical:!1,meta:{links:{}}},url:function(){var a=this.get("name");return a=a||"",b.root+"/posts/types/"+this.defaultPostType()+"/taxonomies/"+a},defaultPostType:function(){var a=this.get("types");return"undefined"!=typeof a&&a[0]?a[0]:null}}),a.api.models.Term=c.Model.extend({idAttribute:"ID",type:"post",taxonomy:"category",initialize:function(a,b){"undefined"!=typeof b&&(b.type&&(this.type=b.type),b.taxonomy&&(this.taxonomy=b.taxonomy))},url:function(){var a=this.get("ID");return a=a||"",b.root+"/posts/types/"+this.type+"/taxonomies/"+this.taxonomy+"/terms/"+a},defaults:{ID:null,name:"",slug:"",description:"",parent:null,count:0,link:"",meta:{links:{}}}}),a.api.models.Post=c.Model.extend({idAttribute:"ID",urlRoot:b.root+"/posts",defaults:function(){return{ID:null,title:"",status:"draft",type:"post",author:new a.api.models.User,content:"",link:"",parent:0,date:new Date,modified:new Date,format:"standard",slug:"",guid:"",excerpt:"",menu_order:0,comment_status:"open",ping_status:"open",sticky:!1,date_tz:"Etc/UTC",modified_tz:"Etc/UTC",terms:{},post_meta:{},meta:{links:{}}}},toJSON:function(){var a=_.clone(this.attributes);return delete a.date_gmt,delete a.modified_gmt,_.each(d,function(b){a[b]=a[b].toISOString()}),a},parse:function(b){return _.each(d,function(c){if(c in b){var d=a.api.utils.parseISO8601(b[c]);b[c]=new Date(d)}}),delete b.date_gmt,delete b.modified_gmt,b.author=new a.api.models.User({username:b.author}),b},parent:function(){var b,c=this.get("parent");return 0===c?null:this.collection?this.collection.get(c):(b=new a.api.models.Post({ID:c}),b.fetch(),b)}}),a.api.models.PostType=c.Model.extend({idAttribute:"slug",urlRoot:b.root+"/posts/types",defaults:{slug:null,name:"",description:"",labels:{},queryable:!1,searchable:!1,hierarchical:!1,meta:{links:{}},taxonomies:[]},save:function(){return!1},"delete":function(){return!1}})}(wp,WP_API_Settings,Backbone,window),function(a,b,c,d){"use strict";a.api.collections.Posts=c.Collection.extend({url:b.root+"/posts",model:a.api.models.Post}),a.api.collections.Users=c.Collection.extend({url:b.root+"/users",model:a.api.models.User}),a.api.collections.Taxonomies=c.Collection.extend({model:a.api.models.Taxonomy,type:"post",initialize:function(a,b){b&&b.type&&(this.type=b.type)},url:function(){return b.root+"/posts/types/"+this.type+"/taxonomies/"}}),a.api.collections.PostTypes=c.Collection.extend({model:a.api.models.PostType,url:b.root+"/posts/types"}),a.api.collections.Terms=c.Collection.extend({model:a.api.models.Term,type:"post",taxonomy:"category",initialize:function(a,b){"undefined"!=typeof b&&(b.type&&(this.type=b.type),b.taxonomy&&(this.taxonomy=b.taxonomy)),this.on("add",d.bind(this.addModel,this))},addModel:function(a){a.type=this.type,a.taxonomy=this.taxonomy},url:function(){return b.root+"/posts/types/"+this.type+"/taxonomies/"+this.taxonomy+"/terms/"}})}(wp,WP_API_Settings,Backbone,_,window);
//# sourceMappingURL=wp-api.min.map